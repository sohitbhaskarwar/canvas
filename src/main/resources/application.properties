# OAuth Configuration
spring.security.oauth2.client.registration.canvas.client-id=10000000000011
spring.security.oauth2.client.registration.canvas.client-secret=ZxcGR8hyHWonq28dwVqtDhWPKGGX4PYAAElF8meGZrZJCGEN4knsO7W22c6dJZvs
spring.security.oauth2.client.registration.canvas.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.canvas.redirect-uri=http://localhost:8080/welcome
spring.security.oauth2.client.registration.canvas.scope=read
# Provider Configuration
spring.security.oauth2.client.provider.canvas.authorization-uri=http://3.231.151.15/login/oauth2/auth
spring.security.oauth2.client.provider.canvas.token-uri=http://3.231.151.15/login/oauth2/token
spring.security.oauth2.client.provider.canvas.user-info-uri=http://3.231.151.15/api/v1/users/self
spring.security.oauth2.client.provider.canvas.user-name-attribute=miken@bloove.com

# Canvas API Configuration
canvas.api.base-url=http://3.231.151.15
canvas.api.key=IRTq2XFYk1Hml5qaJ4B7aOXRoFToP8UDYRfMVMG1tRl6JexbqFM6onirxbjzkhXq

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/test-canvas
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update


server.port=8080
spring.main.allow-bean-definition-overriding=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true




